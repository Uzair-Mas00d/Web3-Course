{
  "address": "0xfDE92a99D7F2ceb70f36D7eC28f9182F5F4Ec74e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6b3dafc9dafc480dfc5e0ddca02b929a53d921a7ed0ec87c092ea7c3461e3b57",
  "receipt": {
    "to": null,
    "from": "0xF441AF52A287c8087b5e419d434cc75CA2560124",
    "contractAddress": "0xfDE92a99D7F2ceb70f36D7eC28f9182F5F4Ec74e",
    "transactionIndex": 65,
    "gasUsed": "1009477",
    "logsBloom": "0x
    "blockHash": "0xe41b18cbc233725ffa8cd355f1c3899bc4f73f321b6a7cab61409ec59a9eba07",
    "transactionHash": "0x6b3dafc9dafc480dfc5e0ddca02b929a53d921a7ed0ec87c092ea7c3461e3b57",
    "logs": [],
    "blockNumber": 5496563,
    "cumulativeGasUsed": "12612027",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "2220cf250c904a4e351123c9ae057726",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ME\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n// import \\\"hardhat/console.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowd funding\\n *  @author ME\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address[] private s_funders;\\n    mapping(address => uint) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        // console.log(i_owner);\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        // msg.value has 18 decimal i.e 1.000000000000000000\\n        // msg.value works in wei unit.\\n        require(\\n            msg.value.getConverionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Not enough eth\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint i = 0; i < s_funders.length; i++) {\\n            address funder = s_funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // send\\n        // bool sendSucess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSucess, \\\"Call Failed\\\");\\n\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess,) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess);\\n    }\\n\\n    function getOwner() public view returns(address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address){\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256){\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface){\\n        return s_priceFeed;\\n    }\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    //  }\\n}\\n\",\"keccak256\":\"0x0f57e2d7c1075d73279d1da3ce20c1c0918a023c8ec497b191cb77d6197db1cc\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint) {\\r\\n        // ABI \\r\\n        // address 0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\r\\n        // ETH in term of USD\\r\\n        // 3000.00000000\\r\\n\\r\\n        return uint256(price * 1e10); // to match decimal of price and msg.value\\r\\n    }\\r\\n\\r\\n    function getConverionRate(uint ethAmount,AggregatorV3Interface priceFeed) internal view returns(uint) {\\r\\n        uint ethPrice = getPrice(priceFeed);\\r\\n        uint ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\\r\\n\",\"keccak256\":\"0x99e3325081c4b72a609e529ef89dfa9b256e54c8dd8d5c29ee5ecc9e76bd7c49\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200126a3803806200126a833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110e462000186600039600081816101f101528181610440015281816105b901526107af01526110e46000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a72565b6101a6565b6040516100b49190610ab8565b60405180910390f35b3480156100c957600080fd5b506100d26101ef565b005b3480156100e057600080fd5b506100e961042f565b6040516100f69190610ab8565b60405180910390f35b34801561010b57600080fd5b5061011461043c565b6040516101219190610ae2565b60405180910390f35b34801561013657600080fd5b5061013f610464565b60405161014c9190610b5c565b60405180910390f35b61015d61048e565b005b6101676105b7565b005b34801561017557600080fd5b50610190600480360381019061018b9190610ba3565b610845565b60405161019d9190610ae2565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610274576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031f57600080828154811061029957610298610bd0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061031790610c2e565b915050610277565b50600067ffffffffffffffff81111561033b5761033a610c77565b5b6040519080825280602002602001820160405280156103695781602001602082028036833780820191505090505b506000908051906020019061037f929190610968565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103a690610cd7565b60006040518083038185875af1925050503d80600081146103e3576040519150601f19603f3d011682016040523d82523d6000602084013e6103e8565b606091505b505090508061042c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042390610d49565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104cd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088c90919063ffffffff16565b101561050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050590610db5565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461063c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106bf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610675575b5050505050905060005b815181101561074a5760008282815181106106e7576106e6610bd0565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074290610c2e565b9150506106c9565b50600067ffffffffffffffff81111561076657610765610c77565b5b6040519080825280602002602001820160405280156107945781602001602082028036833780820191505090505b50600090805190602001906107aa929190610968565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107f190610cd7565b60006040518083038185875af1925050503d806000811461082e576040519150601f19603f3d011682016040523d82523d6000602084013e610833565b606091505b505090508061084157600080fd5b5050565b600080828154811061085a57610859610bd0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610898836108c8565b90506000670de0b6b3a764000085836108b19190610dd5565b6108bb9190610e5e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091157600080fd5b505afa158015610925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109499190610f1c565b5050509150506402540be400816109609190610f97565b915050919050565b8280548282559060005260206000209081019282156109e1579160200282015b828111156109e05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610988565b5b5090506109ee91906109f2565b5090565b5b80821115610a0b5760008160009055506001016109f3565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3f82610a14565b9050919050565b610a4f81610a34565b8114610a5a57600080fd5b50565b600081359050610a6c81610a46565b92915050565b600060208284031215610a8857610a87610a0f565b5b6000610a9684828501610a5d565b91505092915050565b6000819050919050565b610ab281610a9f565b82525050565b6000602082019050610acd6000830184610aa9565b92915050565b610adc81610a34565b82525050565b6000602082019050610af76000830184610ad3565b92915050565b6000819050919050565b6000610b22610b1d610b1884610a14565b610afd565b610a14565b9050919050565b6000610b3482610b07565b9050919050565b6000610b4682610b29565b9050919050565b610b5681610b3b565b82525050565b6000602082019050610b716000830184610b4d565b92915050565b610b8081610a9f565b8114610b8b57600080fd5b50565b600081359050610b9d81610b77565b92915050565b600060208284031215610bb957610bb8610a0f565b5b6000610bc784828501610b8e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c3982610a9f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c6c57610c6b610bff565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cc1600083610ca6565b9150610ccc82610cb1565b600082019050919050565b6000610ce282610cb4565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610d33600b83610cec565b9150610d3e82610cfd565b602082019050919050565b60006020820190508181036000830152610d6281610d26565b9050919050565b7f4e6f7420656e6f75676820657468000000000000000000000000000000000000600082015250565b6000610d9f600e83610cec565b9150610daa82610d69565b602082019050919050565b60006020820190508181036000830152610dce81610d92565b9050919050565b6000610de082610a9f565b9150610deb83610a9f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e2457610e23610bff565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6982610a9f565b9150610e7483610a9f565b925082610e8457610e83610e2f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eae81610e8f565b8114610eb957600080fd5b50565b600081519050610ecb81610ea5565b92915050565b6000819050919050565b610ee481610ed1565b8114610eef57600080fd5b50565b600081519050610f0181610edb565b92915050565b600081519050610f1681610b77565b92915050565b600080600080600060a08688031215610f3857610f37610a0f565b5b6000610f4688828901610ebc565b9550506020610f5788828901610ef2565b9450506040610f6888828901610f07565b9350506060610f7988828901610f07565b9250506080610f8a88828901610ebc565b9150509295509295909350565b6000610fa282610ed1565b9150610fad83610ed1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fec57610feb610bff565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561102957611028610bff565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561106657611065610bff565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110a3576110a2610bff565b5b82820290509291505056fea264697066735822122071bc4e3ddcef6f5822b270dcf3a1ce6a5d7a814f7b9113b6a5e9dd41b0310a3064736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a72565b6101a6565b6040516100b49190610ab8565b60405180910390f35b3480156100c957600080fd5b506100d26101ef565b005b3480156100e057600080fd5b506100e961042f565b6040516100f69190610ab8565b60405180910390f35b34801561010b57600080fd5b5061011461043c565b6040516101219190610ae2565b60405180910390f35b34801561013657600080fd5b5061013f610464565b60405161014c9190610b5c565b60405180910390f35b61015d61048e565b005b6101676105b7565b005b34801561017557600080fd5b50610190600480360381019061018b9190610ba3565b610845565b60405161019d9190610ae2565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610274576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031f57600080828154811061029957610298610bd0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061031790610c2e565b915050610277565b50600067ffffffffffffffff81111561033b5761033a610c77565b5b6040519080825280602002602001820160405280156103695781602001602082028036833780820191505090505b506000908051906020019061037f929190610968565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103a690610cd7565b60006040518083038185875af1925050503d80600081146103e3576040519150601f19603f3d011682016040523d82523d6000602084013e6103e8565b606091505b505090508061042c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042390610d49565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104cd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088c90919063ffffffff16565b101561050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050590610db5565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461063c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106bf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610675575b5050505050905060005b815181101561074a5760008282815181106106e7576106e6610bd0565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074290610c2e565b9150506106c9565b50600067ffffffffffffffff81111561076657610765610c77565b5b6040519080825280602002602001820160405280156107945781602001602082028036833780820191505090505b50600090805190602001906107aa929190610968565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107f190610cd7565b60006040518083038185875af1925050503d806000811461082e576040519150601f19603f3d011682016040523d82523d6000602084013e610833565b606091505b505090508061084157600080fd5b5050565b600080828154811061085a57610859610bd0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610898836108c8565b90506000670de0b6b3a764000085836108b19190610dd5565b6108bb9190610e5e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091157600080fd5b505afa158015610925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109499190610f1c565b5050509150506402540be400816109609190610f97565b915050919050565b8280548282559060005260206000209081019282156109e1579160200282015b828111156109e05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610988565b5b5090506109ee91906109f2565b5090565b5b80821115610a0b5760008160009055506001016109f3565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3f82610a14565b9050919050565b610a4f81610a34565b8114610a5a57600080fd5b50565b600081359050610a6c81610a46565b92915050565b600060208284031215610a8857610a87610a0f565b5b6000610a9684828501610a5d565b91505092915050565b6000819050919050565b610ab281610a9f565b82525050565b6000602082019050610acd6000830184610aa9565b92915050565b610adc81610a34565b82525050565b6000602082019050610af76000830184610ad3565b92915050565b6000819050919050565b6000610b22610b1d610b1884610a14565b610afd565b610a14565b9050919050565b6000610b3482610b07565b9050919050565b6000610b4682610b29565b9050919050565b610b5681610b3b565b82525050565b6000602082019050610b716000830184610b4d565b92915050565b610b8081610a9f565b8114610b8b57600080fd5b50565b600081359050610b9d81610b77565b92915050565b600060208284031215610bb957610bb8610a0f565b5b6000610bc784828501610b8e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c3982610a9f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c6c57610c6b610bff565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cc1600083610ca6565b9150610ccc82610cb1565b600082019050919050565b6000610ce282610cb4565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610d33600b83610cec565b9150610d3e82610cfd565b602082019050919050565b60006020820190508181036000830152610d6281610d26565b9050919050565b7f4e6f7420656e6f75676820657468000000000000000000000000000000000000600082015250565b6000610d9f600e83610cec565b9150610daa82610d69565b602082019050919050565b60006020820190508181036000830152610dce81610d92565b9050919050565b6000610de082610a9f565b9150610deb83610a9f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e2457610e23610bff565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6982610a9f565b9150610e7483610a9f565b925082610e8457610e83610e2f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eae81610e8f565b8114610eb957600080fd5b50565b600081519050610ecb81610ea5565b92915050565b6000819050919050565b610ee481610ed1565b8114610eef57600080fd5b50565b600081519050610f0181610edb565b92915050565b600081519050610f1681610b77565b92915050565b600080600080600060a08688031215610f3857610f37610a0f565b5b6000610f4688828901610ebc565b9550506020610f5788828901610ef2565b9450506040610f6888828901610f07565b9350506060610f7988828901610f07565b9250506080610f8a88828901610ebc565b9150509295509295909350565b6000610fa282610ed1565b9150610fad83610ed1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fec57610feb610bff565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561102957611028610bff565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561106657611065610bff565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110a3576110a2610bff565b5b82820290509291505056fea264697066735822122071bc4e3ddcef6f5822b270dcf3a1ce6a5d7a814f7b9113b6a5e9dd41b0310a3064736f6c63430008080033",
  "devdoc": {
    "author": "ME",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}